<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sysone.ddogdog.customer.reservation.mapper.ReservationMapper">
    <insert id="saveReserve"  statementType="CALLABLE" parameterType="com.sysone.ddogdog.customer.reservation.model.Reservation">
        {CALL save_reservation(
                #{customerId, jdbcType=NUMERIC},
                #{hotelId, jdbcType=NUMERIC},
                #{startDate, jdbcType=TIMESTAMP},
                #{endDate, jdbcType=TIMESTAMP},
                #{count, jdbcType=NUMERIC},
                #{price, jdbcType=NUMERIC},
                #{canceled, jdbcType=NUMERIC},
                #{createDate, jdbcType=TIMESTAMP},
                #{id, mode=OUT, jdbcType=NUMERIC}
            )}
    </insert>
    <select id="findReservationsByCustomerId" parameterType="Long" resultType="com.sysone.ddogdog.customer.reservation.model.ResponseReservationDTO">
        SELECT h.business_name,h.main_image,h.intro,
               a.full_address,
               r.id, r.start_date, r.end_date, r.count, r.price, r.create_date, r.canceled
        FROM hotels h
                 INNER JOIN addresses a ON h.address_id = a.id
                 INNER JOIN (
            SELECT id, hotel_id, start_date, end_date, count, price, create_date, canceled
            FROM reservations
            WHERE customer_id = #{customerId}
        ) r ON r.hotel_id = h.id
    </select>

    <update id="patchReservationCanceled" parameterType="Long">
        UPDATE reservations
        SET canceled = 1
        WHERE id = #{id}
    </update>

    <select id="findReservationStatsByCustomerId" parameterType="Long" resultType="com.sysone.ddogdog.customer.reservation.model.ResponseReservationStatsDTO">
        SELECT
        COUNT(*) AS total_reservations,  -- 총 예약 개수
        COUNT(CASE WHEN end_date  &lt; SYSDATE THEN 1 END) AS past_reservations,  -- 오늘 날짜 기준 end_date가 지난 개수
        COUNT(CASE WHEN start_date &gt; SYSDATE THEN 1 END) AS future_reservations, -- 오늘 날짜 기준 start_date가 더 미래인 개수
        COUNT(CASE WHEN start_date &lt;= SYSDATE AND end_date &gt;= SYSDATE THEN 1 END) AS current_reservations  -- 현재 사용 중인 예약 개수
        FROM reservations
        WHERE customer_id = #{customerId}
    </select>

    <select id="findMostReservationHotelByCustomerId" parameterType="Long" resultType="com.sysone.ddogdog.customer.reservation.model.ResponseMostReservationHotelDTO">
        SELECT h.id AS hotel_id,
               h.business_name,
               h.main_image,
               h.phone_number,
               h.intro,
               a.full_address,
               r.visit_count
        FROM (
                 SELECT hotel_id, COUNT(*) AS visit_count,
                        ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rn
                 FROM reservations
                 WHERE customer_id = #{customerId}
                 GROUP BY hotel_id
             ) r
                 JOIN hotels h ON r.hotel_id = h.id
                 JOIN addresses a ON h.address_id = a.id
        WHERE r.rn = 1
    </select>
</mapper>
